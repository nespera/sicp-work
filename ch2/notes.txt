Ex 2.25
=======

(define a (list 1 3 (list 5 7)9))
(car (cdr(car(cdr(cdr a)))))
;Value: 7

(define b (list(list 7)))
(car (car b))
;Value: 7

(define c (list 1(list 2(list 3(list 4(list 5(list 6 7)))))))
(car(cdr(car(cdr(car(cdr(car(cdr(car(cdr(car(cdr c))))))))))))
;Value: 7

Ex 2.63
=======

In each case the procedure yields the list (1 3 5 7 9 11)
They each seem to have number of steps equal to O(n)
They each call cons at each step.
But the first procedure also calls append. Is this expensive?
